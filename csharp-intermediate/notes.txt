Anatomy of a class

Data (  represented by fields)

Behaviour ( represented by methods / functions )


class UML unified modified lanague
--------
Person
---------
NAME: string
Age: Byte
Height : float
weight: byte
-------------
Walk ()
Talk ()
Eat ()
Sleep ()



Object - instance of a class

objects of the above class is  John Mary or Scott


Class Members
Instance : Accessible from an object

Static: accessible from the class

Constructors

same name as the class

object Initializers

 syntax for quickly initailing object with constructor to avoid making about of constructors

 var person = new Person
 {
 FirstName= " Lynn" ,
 LastName  = "Long"
 };


 METHOD
 Signature of method

 Name
 number and type of parameters

 public class Point
 {
  public void move ( int x, int y({}
 }


 Overloading Methods

 having a method with the same name but differeny signatures

  public class Point
 {
  public void move ( int x, int y){}
  public void move ( point newLocation){}
  public void move ( point newLocation , int speed){}
 }


Parms modifier

public in add ( params int[] numbers){}

when calling add you dont have to initialize array every time

fields

initialization field


Access modifier to protect code


Inheritance is not a IS-a relationship

like A Car is a Vehicle